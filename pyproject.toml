[project]
name = "AutoML"
version = "0.1.0"
description = "AutoML for Oncology, developed by the Princess Margaret Cancer Digital Intelligence Team"
authors = [
    { name = "Joshua Siraj", email = "joshua.siraj@ryerson.ca" },
    { name = "Sejin Kim", email = "hello@sejin.kim" }
]

[tool.pixi.project]
channels = ["conda-forge", "pytorch"]
platforms = ["linux-64", "win-64", "osx-64"]

[tool.pixi.tasks]
example = "jupyter lab"

[tool.pixi.dependencies]
python = ">=3.10"
pyyaml = ">=6.0.2,<7"
fpdf2 = ">=2.8.1,<3"
jupyterlab = ">=4.2.5,<5"
seaborn = ">=0.13.2,<0.14"
"autogluon.tabular" = ">1.0"
pandas = ">2.0"
scikit-learn = ">=1.2.2,<1.5"
openpyxl = ">=3.1.5,<3.2"
htmlmin = "==0.1.12"
scipy = ">=1.11.4,<1.13"
tableone = "==0.9.1"
borb = ">=2.1.25,<3"
scikit-survival = ">=0.23.1,<0.24"
prettytable = ">=3.12.0,<4"
lifelines = ">=0.30.0,<0.31"
lightning = ">=2.4.0,<3"
optuna = ">=4.1.0,<5"
fairlearn = ">=0.12.0,<0.13"
shap = ">=0.46.0,<0.47"

[tool.pixi.pypi-dependencies]
AutoML = { path = ".", editable = true }
mrmr-selection = "==0.2.8"
umap-learn = ">=0.5.6, <0.6"

[tool.pixi.environments]
dev = { features = ["test", "style"], solve-group = "default" }
py310 = ["py310", "test"]
py311 = ["py311", "test"]
py312 = ["py312", "test"]

############################################## python ###############################################

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"
[tool.pixi.feature.py311.dependencies]
python = "3.11.*"
[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

############################################## TEST ################################################

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"

[tool.pixi.feature.test.tasks.test]
cmd = [
  "pytest",
  "--numprocesses=auto",
  "-s",
  "--verbose",
  "--cov=readii",
  "--cov-report=xml:coverage-report/coverage.xml",
  "--cov-config=configs/coverage.toml",
]
inputs = ["src", "tests", "configs/coverage.toml"]
outputs = ["coverage-report/coverage.xml"]
description = "Run pytest (Note: run `coverage` task to do both)"

[tool.pixi.feature.test.tasks.coverage]
cmd = "coverage report --rcfile=configs/coverage.toml"
inputs = ["coverage-report/coverage.xml", "configs/coverage.toml"]
depends-on = ["test"]
description = "Run pytest and generate coverage report"

############################################## STYLE ###############################################
# See configs/ruff.toml for the configuration
[tool.pixi.feature.style.dependencies]
ruff = ">=0.4.4"
pre-commit = ">=3.7.1,<3.8"

[tool.pixi.feature.style.tasks]
[tool.pixi.feature.style.tasks.lint]
cmd = "ruff check  --config=configs/ruff.toml"
inputs = ["src", "configs/ruff.toml"]
description = "Run ruff linter"

[tool.pixi.feature.style.tasks.format]
cmd = "ruff format --config=configs/ruff.toml"
inputs = ["src", "configs/ruff.toml"]
description = "Run ruff formatter, use `--diff` to see changes only"
